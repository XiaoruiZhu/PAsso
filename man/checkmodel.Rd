% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkmodel.R
\name{checkmodel}
\alias{checkmodel}
\title{A visualization tool of diagnostics of fitted model in the partial association analysis}
\usage{
checkmodel(object, what = c("qq", "fitted", "covariate"), ...)
}
\arguments{
\item{object}{The object in "PAsso" class that is generated by "corr.test" or "corr".}

\item{what}{A character string specifying what to plot. Default is \code{"qq"} which
produces a quantile-quantile plots of the residuals. \code{"fitted"} will give a matrix
plot between residuals and fitted response. \code{"covariates"} will give a matrix plot
between each residual and each covariate.}

\item{...}{Additional optional arguments for drawing plots to be passed onto.}
}
\value{
A list contains plots of \code{"ggplot"} object
}
\description{
A plot matrix to display the QQ-plot of each fitted model when conducting the partial
association analyses. Based on the input of "PAsso" object, each plot stands for the
QQ-plot of the surrogate residuals of fitted models. All the plots are based on the
surrogate residuals generated from \code{"resides"} function.Graphics are designed
based on \code{\link{ggplot2}}.
}
\examples{
# import data -------------------------------------------------------------
data(nes96)
summary(nes96)
# "corr" function: input three responses ----------------------------
PAsso_2 <- corr(responses = c("vote.num", "PID", "selfLR"),
                adjustments = c("income.num", "age", "edu.year"),
                data = nes96,
                models = c("probit", "probit", "probit"),
                association = c("partial"), method = c("kendall"),
                resids.method = "latent", rep_num = 100)
print(PAsso_2, digits=5)
summary(PAsso_2)
check_qq <- checkmodel(object = PAsso_2, color="blue",what = "qq")
do.call("grid.arrange", c(check_qq, ncol=1))

check_fitted <- checkmodel(object = PAsso_2, what = "fitted")
do.call("grid.arrange", c(check_fitted, ncol=1))

check_covar <- checkmodel(object = PAsso_2, what = "covariate")
do.call("grid.arrange", c(check_covar, ncol=1))

}
